#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
Hogwarts House Sorting Quiz  – CLI 20問版
A : Gryffindor B : Hufflepuff C : Ravenclaw D : Slytherin
"""

def main() -> None:
    questions = [
        ("Q1. 期末レポートの締め切りが明日。まだほとんど手をつけていない！どうする？",
         "徹夜で気合入れて書き上げる！",
         "まずは落ち着いて友達に進捗を聞く",
         "既存資料を効率的にまとめる",
         "教授に延長交渉 or 友達に頼る"),
        ("Q2. 新しいバイトを始めるなら、どんな基準で選ぶ？",
         "挑戦できる成長環境",
         "人間関係が良くまかない付き",
         "スキルが活かせて効率的に稼げる",
         "高時給・コネ・昇給チャンス"),
        ("Q3. どんなタイプの迷路が好き？",
         "直線的で即決型",
         "謎解き要素あり",
         "友達と相談しながら",
         "先読みが重要な戦略型"),
        ("Q4. 休日の過ごし方で一番テンションが上がるのは？",
         "友達とBBQやアクティビティ",
         "家族や友達とまったり映画・カフェ",
         "課題やプログラミングの勉強",
         "流行スポットを巡ってSNS投稿"),
        ("Q5. 興味のない講義の課題。どう乗り切る？",
         "気合で終わらせる",
         "友達と協力して分担",
         "評価基準を分析し最小労力で最大効果",
         "他人のレポ＋生成AIを参考"),
        ("Q6. タイムトラベルできるとしたら何をする？",
         "過去の悲劇を防ぐ",
         "未来の自分に恥じないよう今を大切に",
         "歴史の真実を確かめる",
         "未来を操作して有利にする"),
        ("Q7. 最も魅力的に感じる景色は？",
         "嵐の中にそびえる崖の上",
         "柔らかな光に包まれた森の小道",
         "静かな湖畔の古い図書館",
         "地下に隠された秘密の通路"),
        ("Q8. 勝つとはどういうこと？",
         "信じた行動で道を切り開く",
         "みんなが納得できる形で終える",
         "気付かれず成果を出す",
         "計画通りに全てを達成"),
        ("Q9. 直感 vs 計画、どっちが信じられる？",
         "とっさの直感",
         "人間関係を見ながら判断",
         "分析してから動く",
         "目標と手段を重視"),
        ("Q10. 禁じられた森に入ることになったら？",
         "恐れず仲間と突き進む",
         "危険を承知で助けが必要なら入る",
         "地図と知識で最適ルートを探す",
         "得られるものを計算してから動く"),
        ("Q11. 魔法薬の授業で失敗したら？",
         "堂々と認め次は成功させる",
         "何度でも練習して挽回",
         "ミスを徹底的に分析",
         "責任を回避し成功例を研究"),
        ("Q12. 日頃どんな音楽を聴く？",
         "流行のアーティストをあさる",
         "洋楽を歌えるように努力",
         "歌詞が深い曲",
         "駆け出しアーティストを漁り古参ファンに"),
        ("Q13. 新入生歓迎会での行動は？",
         "誰よりも先に話しかけに行く",
         "緊張している人に声をかける",
         "人間観察し情報収集",
         "相手を目的で選ぶ"),
        ("Q14. 最も許せないものは？",
         "不正を見過ごすこと",
         "無知・根拠のない発言",
         "約束を破ること",
         "努力を軽く扱われること"),
        ("Q15. ファッションで最重視する点は？",
         "個性を表現し目を引くデザイン",
         "快適さと汎用性",
         "機能性・素材・知的な印象",
         "ブランド力や流行・評価"),
        ("Q16. 仲間が間違った道に進みそうなら？",
         "勇気を持って忠告",
         "寄り添いながら軌道修正",
         "論理的に導く",
         "距離を置きつつ最善の利益を考える"),
        ("Q17. 信頼できる人とは？",
         "危険なときに助けてくれる人",
         "自分の話を深く理解しようとする人",
         "いつも変わらずそばにいる人",
         "自分の価値や力を認めてくれる人"),
        ("Q18. 規則を破ることは許される？",
         "正義のためなら破る",
         "状況によっては必要",
         "規則は守るべき",
         "合理的なら破る価値あり"),
        ("Q19. 待ち合わせに遅れそうな時は？",
         "全速力で向かい謝罪",
         "すぐ連絡し迷惑を最小化",
         "効率ルートで遅れを最小化",
         "相手によっては気にしない"),
        ("Q20. 友人が深刻な悩みを抱えている時は？",
         "一緒に解決策を探し行動を促す",
         "黙ってそばに寄り添い話を聞く",
         "冷静に分析し客観的アドバイス",
         "悩みを利用して自分に有利にする")
    ]

    scores = {"Gryffindor": 0, "Hufflepuff": 0, "Ravenclaw": 0, "Slytherin": 0}

    for idx, (q, *opts) in enumerate(questions, 1):
        print(f"\n{q}")
        print(f"  A. {opts[0]}")
        print(f"  B. {opts[1]}")
        print(f"  C. {opts[2]}")
        print(f"  D. {opts[3]}")
        while True:
            ans = input("あなたの選択 (A-D): ").strip().upper()
            if ans in "ABCD":
                if ans == "A":
                    scores["Gryffindor"] += 1
                elif ans == "B":
                    scores["Hufflepuff"] += 1
                elif ans == "C":
                    scores["Ravenclaw"] += 1
                else:
                    scores["Slytherin"] += 1
                break
            else:
                print("A, B, C, D のいずれかを入力してください。")

    print("\n=== 診断結果 ===")
    max_score = max(scores.values())
    top_houses = [h for h, s in scores.items() if s == max_score]

    if len(top_houses) == 1:
        print(f"あなたの寮は {top_houses[0]} です!")
    else:
        joined = " ・ ".join(top_houses)
        print(f"あなたは {joined} の特徴を併せ持っています!")

    print("\n詳細スコア:")
    for house, s in scores.items():
        print(f"  {house:<11}: {s}")

if __name__ == "__main__":
    main()
